class PortalStatusBar : BaseStatusBar
{
	override void Init()
	{
		Super.Init();
		SetSize(0, 320, 200);
		CompleteBorder = True;
	}

	override void Draw(int state, double TicFrac)
	{
		Super.Draw(state, TicFrac);

		if (!automapactive)
		{
			DrawCrosshairHint();
		}
	}

	void DrawCrosshairHint()
	{
		if (!CPlayer) { return; }

		TextureID CrosshairImage;
		double size = 1.0;
		Vector2 dimensions;
		double w, h;
		double maxwidth = max(52.0, int(crosshairscale * screen.GetWidth() / 20));
		PortalGun gun;
		color pri = "00 7B FF";
		color alt = "FF 84 00";

		gun = PortalGun(CPlayer.ReadyWeapon);

		if (
			!gun ||
			CPlayer.cheats & CF_CHASECAM ||
			gamestate == GS_TITLELEVEL || 
			CPlayer.health <= 0
		) { return; }


		if (IsMultiplayer())
		{
			pri = CPlayer.getColor();
			alt = color("FF FF FF") - pri;
		}

		DrawCrosshair("PortalA" .. (gun.portalA ? "1" : "0"), pri);
		DrawCrosshair("PortalB" .. (gun.portalB ? "1" : "0"), alt);
	}

	bool IsMultiplayer()
	{
		for (int i = 1; i < MAXPLAYERS; i++) // If any player above player 0 is present, assume it's multiplayer...
		{
			if (playeringame[i]) { return true; }
		}

		return false;
	}

	void DrawCrosshair(String texture, color clr)
	{
		double maxwidth = max(80.0, int(crosshairscale * screen.GetWidth() / 20));

		TextureID icon = TexMan.CheckForTexture(texture, TexMan.Type_Any);

		if (icon)
		{
			Vector2 dimensions = TexMan.GetScaledSize(icon);

			// Force everything to maxwidth pixels at widest dimension
			if (dimensions.x > dimensions.y)
			{
				dimensions.y *= maxwidth / dimensions.x;
				dimensions.x = maxwidth;
			}
			else
			{
				dimensions.x *= maxwidth / dimensions.y;
				dimensions.y = maxwidth;
			}

			// Draw centered on screen, with offsets forced to center of the icon
			screen.DrawTexture (icon, false, screen.GetWidth() / 2, screen.GetHeight() / 2, DTA_DestWidthF, dimensions.x, DTA_DestHeightF, dimensions.y, DTA_AlphaChannel, true, DTA_FillColor, clr & 0xFFFFFF, DTA_CenterOffset, true);
		}
	}
}